객체지향
문제의 모든 초점을 실세계에 존재하는 객체를 중심으로 생각을 한다.
객체지향 설계
실세계의 실객체가 설계의 기초가 되는 설계기법

객체지향 언어
실객체를 소프트웨어 객체로 쉽게 표현할 수 있게 많은 기능을 가진언어

객체지향 언어:
수학으로 비유하면 c언어는 +, -, *, /, = 등 부호와 숫자를 이용해서 15+21
12*3 같은 문제들을 만들고 해결을 할 수 있지만
c#, c++, python 언어들은 c로 만든 공식들을 사용해서 근의 공식이나
분배법칙 미적분 같은 더 높은 수준의 방식을 이용하는 것 같다. 


객체지향 언어를 대하는 올바른 사고는
내가 다 처음부터 만들어보려고 하는것이 아니라
어느정도 기본이 갖춰진 상태에서 이미 만들어진 것을 가져와서
자신의 것으로 응용해서 만드는 것이 중요하다.

코드를 작성할때 많고 복잡할 것 같은 코드는
먼저 다이어그램을 그려보면서 어느정도 구상을 해놓고 만든다.

클래스 다이어그램 그리기
1. 클래스 이름
2. 클래스 특성
3. 클래스 기능

클래스 멤버의 접근권한

전용(private)
해당 클래스 내부에서만 접근가능
범용(public)
어디에서나 접근가능
보호(protected)
private이지만 자식에게는 접근가능
